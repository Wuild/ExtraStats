local name, stats = ...;
--
--stats.categories = {
--    {
--        id = "attributes",
--        categoryFrame = "AttributesCategory",
--        stats = {
--            {
--                stat = "HEALTH",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.attributes:Health(statFrame, unit);
--                end
--            },
--            {
--                stat = "POWER",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.attributes:Power(statFrame, unit);
--                end
--            },
--            {
--                stat = "STRENGTH",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:GetStat(statFrame, unit, LE_UNIT_STAT_STRENGTH);
--                end
--            },
--            {
--                stat = "AGILITY",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:GetStat(statFrame, unit, LE_UNIT_STAT_AGILITY);
--                end
--            },
--            {
--                stat = "STAMINA",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:GetStat(statFrame, unit, LE_UNIT_STAT_STAMINA);
--                end
--            },
--            {
--                stat = "INTELLECT",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:GetStat(statFrame, unit, LE_UNIT_STAT_INTELLECT);
--                end
--            },
--            {
--                stat = "SPIRIT",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:GetStat(statFrame, unit, LE_UNIT_STAT_SPIRIT);
--                end
--            }
--        },
--    },
--    {
--        id = "melee",
--        categoryFrame = "MeleeCategory",
--        showFunc = function(unit)

--        end,
--        stats = {
--            {
--                stat = "DAMAGE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:Damage(statFrame, unit)
--                    statFrame:SetScript("OnEnter", function()
--                        ExtraStats.stats:DamageFrame_OnEnter(statFrame)
--                    end);
--                end
--            },
--            {
--                stat = "ATTACKSPEED",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:AttackSpeed(statFrame, unit)
--                end
--            },
--            {
--                stat = "ATTACKPOWER",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:AttackPower(statFrame, unit)
--                end
--            },
--            {
--                stat = "HITRATING",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:HitChance(statFrame, unit)
--                end
--            },
--            {
--                stat = "CRITCHANCE",
--                hideAt = 0,
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:CriticalChance(statFrame, unit)
--                end
--            },
--            {
--                stat = "HASTE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.melee:MeleeHaste(statFrame, unit)
--                end
--            }
--        }
--    },
--    {
--        id = "ranged",
--        categoryFrame = "RangedCategory",
--        showFunc = function(unit)
--            if ExtraStats.db.char.dynamic then
--                return ExtraStats:IsRanged()
--            end
--
--            return true
--        end,
--        stats = {
--            {
--                stat = "RANGED_DAMAGE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.ranged:Damage(statFrame, unit)
--                end
--            },
--            {
--                stat = "RANGED_ATTACKSPEED",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.ranged:RangedAttackSpeed(statFrame, unit)
--                end
--            },
--            {
--                stat = "RANGED_ATTACKPOWER",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.ranged:RangedAttackPower(statFrame, unit)
--                end
--            },
--            {
--                stat = "RANGED_HITRATING",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.ranged:RangedCritChance(statFrame, unit)
--                end
--            },
--            {
--                stat = "RANGED_CRITCHANCE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.ranged:RangedCritChance(statFrame, unit)
--                end
--            },
--        }
--    },
--    {
--        id = "spell",
--        categoryFrame = "SpellCategory",
--        showFunc = function()
--            if ExtraStats.db.char.dynamic then
--                return ExtraStats:IsSpellUser() and CURRENT_ROLE ~= "TANK"
--            end
--
--            return true
--        end,
--        stats = {
--            {
--                stat = "SPELL_DAMAGE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.spell:SpellBonusDamage(statFrame, unit)
--                end
--            },
--            {
--                stat = "SPELL_HEALING",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.spell:SpellBonusHealing(statFrame, unit)
--                end
--            },
--            {
--                stat = "SPELL_CRITCHANCE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.spell:SpellCritChance(statFrame, unit)
--                end
--            },
--            {
--                stat = "SPELL_HASTE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.spell:SpellHaste(statFrame, unit)
--                end
--            },
--            {
--                stat = "SPELL_REGEN",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.spell:ManaRegen(statFrame, unit)
--                end
--            }
--        }
--    },
--    {
--        id = "defenses",
--        categoryFrame = "DefensesCategory",
--        showFunc = function()
--            if ExtraStats.db.char.dynamic then
--                return CURRENT_ROLE == "TANK"
--            end
--
--            return true
--        end,
--        stats = {
--            {
--                stat = "ARMOR",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.defense:Armor(statFrame, unit);
--                end
--            },
--            {
--                stat = "DEFENSE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.defense:Defense(statFrame, unit);
--                end
--            },
--            {
--                stat = "DODGE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.defense:Dodge(statFrame, unit);
--                end
--            },
--            {
--                stat = "PARRY",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.defense:Parry(statFrame, unit);
--                end
--            },
--            {
--                stat = "BLOCK",
--                showFunc = C_PaperDollInfo.OffhandHasShield,
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats.defense:Block(statFrame, unit);
--                end
--            }
--        }
--    },
--    {
--        id = "enhancements",
--        categoryFrame = "EnhancementsCategory",
--        stats = {
--            {
--                stat = "EXPERTISE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:SetExpertise(statFrame, unit)
--                end
--            },
--            {
--                stat = "RESILIANCE",
--                updateFunc = function(statFrame, unit)
--                    ExtraStats.stats:SetResilience(statFrame, unit);
--                end
--            }
--        },
--    },
--};